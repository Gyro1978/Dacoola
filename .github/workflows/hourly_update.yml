# .github/workflows/hourly_update.yml

name: Hourly News Update and Deploy

on:
  schedule:
    # Runs every 20 minutes (0, 20, 40 minutes past the hour)
    - cron: "0,20,40 * * * *" # Runs at the top of every
  workflow_dispatch: # Allows manual triggering

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    # Prevent concurrent runs of the same workflow
    concurrency:
      group: ${{ github.workflow }}
      cancel-in-progress: true

    permissions:
      contents: write # Allow workflow to commit changes

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          # Fetch all history for accurate git pull/rebase
          fetch-depth: 0

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "requirements.txt not found, skipping dependency installation."
          fi

      - name: Run Main Script
        env:
          # Pass API keys from Secrets
          DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
          SERPAPI_API_KEY: ${{ secrets.SERPAPI_API_KEY }}
          # Pass Website Config from Secrets (or Variables if not sensitive)
          YOUR_WEBSITE_NAME: ${{ secrets.YOUR_WEBSITE_NAME || vars.YOUR_WEBSITE_NAME || 'Dacoola' }}
          YOUR_WEBSITE_LOGO_URL: ${{ secrets.YOUR_WEBSITE_LOGO_URL || vars.YOUR_WEBSITE_LOGO_URL || '' }}
          YOUR_SITE_BASE_URL: ${{ secrets.YOUR_SITE_BASE_URL || vars.YOUR_SITE_BASE_URL || '' }}
          # Pass Other Config from Secrets (or Variables)
          MAX_HOME_PAGE_ARTICLES: ${{ secrets.MAX_HOME_PAGE_ARTICLES || vars.MAX_HOME_PAGE_ARTICLES || 20 }}
          # AUTHOR_NAME: ${{ secrets.AUTHOR_NAME || vars.AUTHOR_NAME || 'AI News Team' }} # Optional: if you want to control author name via secrets/vars
        run: python src/main.py

      - name: Commit and Push Changes
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          # Add generated content and state files
          git add public/
          git add data/processed_json/
          # Safely add log file and processed IDs file if they exist
          find . -maxdepth 1 -name 'dacoola.log' -print -exec git add {} \;
          find ./data -maxdepth 1 -name 'processed_article_ids.txt' -print -exec git add {} \;

          # Check if there are staged changes before committing
          if git diff --staged --quiet; then
            echo "No content changes detected to commit."
          else
            echo "Content changes detected. Committing..."
            # Use [skip ci] in commit message to prevent triggering workflows on this commit
            git commit -m "Automated news update [skip ci]"

            # --- START OF FIX ---
            echo "Stashing any potentially unstaged changes..."
            git stash push --include-untracked # Stash everything not committed
            # --- END OF FIX ---

            # Pull latest changes with rebase before pushing to avoid merge conflicts
            echo "Pulling latest changes before push..."
            git pull origin ${{ github.ref_name }} --rebase

            # --- Optional: Apply stashed changes if needed, but usually not for CI generated files ---
            # echo "Applying stashed changes (if any)..."
            # git stash pop || echo "No stash to pop."
            # --- End Optional Stash Pop ---

            echo "Attempting to push changes..."
            # Retry push logic in case of transient network issues
            retry_count=0
            max_retries=3
            until git push origin ${{ github.ref_name }} || [ $retry_count -eq $max_retries ]; do
              retry_count=$((retry_count+1))
              echo "Push failed. Retrying (${retry_count}/${max_retries})..."
              sleep 5 # Wait before retrying
              # Optional: Pull again inside retry loop if needed? Usually rebase before loop is sufficient.
              # git pull origin ${{ github.ref_name }} --rebase
            done

            if [ $retry_count -eq $max_retries ]; then
              echo "::error::Push failed after $max_retries attempts."
              exit 1
            fi
            echo "Changes pushed successfully."
          fi
        env:
          # Use the automatically generated token for commit/push
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # --- DEPLOYMENT STEP (Using Netlify CLI Directly) ---
      - name: Install Netlify CLI
        run: npm install -g netlify-cli

      - name: Deploy to Netlify
        run: netlify deploy --dir=public --prod --auth $NETLIFY_AUTH_TOKEN --site $NETLIFY_SITE_ID
        env:
          # Netlify authentication token and site ID from Secrets
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
