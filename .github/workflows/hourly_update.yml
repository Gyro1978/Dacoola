name: Hourly News Update and Deploy

on:
  schedule:
    # Runs every 20 minutes
    - cron: "0,20,40 * * * *"
  workflow_dispatch: # Allows manual triggering

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    # Prevent concurrent runs
    concurrency:
      group: ${{ github.workflow }}
      cancel-in-progress: true

    permissions:
      contents: write
      # pages: write # Keep commented if using Netlify
      # id-token: write # Keep commented if using Netlify

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for git pull --rebase

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run Main Script
        env:
          # Pass secrets securely as environment variables
          DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
          SERPAPI_API_KEY: ${{ secrets.SERPAPI_API_KEY }}
          CAMB_AI_API_KEY: ${{ secrets.CAMB_AI_API_KEY }}
          # Pass other secrets
          YOUR_WEBSITE_NAME: ${{ secrets.YOUR_WEBSITE_NAME }}
          YOUR_WEBSITE_LOGO_URL: ${{ secrets.YOUR_WEBSITE_LOGO_URL }}
          MAX_HOME_PAGE_ARTICLES: ${{ secrets.MAX_HOME_PAGE_ARTICLES }}
          MAX_LATEST_NEWS: ${{ secrets.MAX_LATEST_NEWS }}
          CHECK_INTERVAL_SECONDS: ${{ secrets.CHECK_INTERVAL_SECONDS }}
          YOUR_SITE_BASE_URL: ${{ secrets.YOUR_SITE_BASE_URL || vars.YOUR_SITE_BASE_URL || '' }}
        run: python src/main.py

      - name: Commit and Push Changes
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          # --- Use find to safely add files if they exist ---
          git add public/ # Add public dir unconditionally
          git add data/processed_json/ # Add processed json dir unconditionally
          # Safely add log file if it exists in the root
          find . -maxdepth 1 -name 'dacoola.log' -print -exec git add {} \;
          # Safely add processed IDs file if it exists in data/
          find ./data -maxdepth 1 -name 'processed_article_ids.txt' -print -exec git add {} \;
          # --------------------------------------------------

          # Check if there are staged changes
          if git diff --staged --quiet; then
            echo "No content changes to commit."
          else
            echo "Content changes detected. Committing..."
            git commit -m "Automated hourly news update [skip ci]"

            # --- CORRECTED PUSH LOGIC ---
            echo "Pulling latest changes before push..."
            git pull origin ${{ github.ref_name }} --rebase # Pull and rebase current commit on top

            echo "Attempting to push changes..."
            # Retry push logic...
            retry_count=0
            max_retries=3
            until git push origin ${{ github.ref_name }} || [ $retry_count -eq $max_retries ]; do
              retry_count=$((retry_count+1))
              echo "Push failed. Retrying (${retry_count}/${max_retries})..."
              sleep 5
            done
            if [ $retry_count -eq $max_retries ]; then
              echo "Push failed after $max_retries attempts."
              exit 1
            fi
            echo "Changes pushed successfully."
            # --------------------------
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # --- DEPLOYMENT STEP ---
      # Option 1: Deploy to GitHub Pages (COMMENTED OUT)
      # - name: Upload artifact for GitHub Pages ...
      # - name: Deploy to GitHub Pages ...

      # Option 2: Deploy via rsync/scp (COMMENTED OUT)
      # - name: Deploy to Server via rsync ...

      # Option 3: Deploy using Netlify CLI (ACTIVE)
      - name: Deploy to Netlify
        uses: netlify/actions/cli@master
        with:
          args: deploy --dir=public --prod # Deploy the 'public' dir to production site
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      # Option 4: Deploy using Vercel CLI (COMMENTED OUT)
      # - name: Install Vercel CLI ...
