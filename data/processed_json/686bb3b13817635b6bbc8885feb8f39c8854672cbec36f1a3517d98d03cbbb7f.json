{
    "id": "686bb3b13817635b6bbc8885feb8f39c8854672cbec36f1a3517d98d03cbbb7f",
    "title": "Build an AI-powered document processing platform with open source NER model and LLM on Amazon SageMaker",
    "link": "https://aws.amazon.com/blogs/machine-learning/build-an-ai-powered-document-processing-platform-with-open-source-ner-model-and-llm-on-amazon-sagemaker/",
    "published_iso": "2025-04-23T16:06:35Z",
    "summary": "<p>Archival data in research institutions and national laboratories represents a vast repository of historical knowledge, yet much of it remains inaccessible due to factors like limited metadata and inconsistent labeling. Traditional keyword-based search mechanisms are often insufficient for locating relevant documents efficiently, requiring extensive manual review to extract meaningful insights.</p> \n<p>To address these challenges, a U.S. National Laboratory has implemented an AI-driven document processing platform that integrates named entity recognition (NER) and <a href=\"https://aws.amazon.com/what-is/large-language-model/\" rel=\"noopener\" target=\"_blank\">large language models (LLMs)</a> on <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html\" rel=\"noopener\" target=\"_blank\">Amazon SageMaker AI</a>. This solution improves the findability and accessibility of archival records by automating metadata enrichment, document classification, and summarization. By using <a href=\"https://aws.amazon.com/blogs/machine-learning/mixtral-8x7b-is-now-available-in-amazon-sagemaker-jumpstart/\" rel=\"noopener\" target=\"_blank\">Mixtral-8x7B</a> for abstractive summarization and title generation, alongside a BERT-based NER model for structured metadata extraction, the system significantly improves the organization and retrieval of scanned documents.</p> \n<p>Designed with a serverless, cost-optimized architecture, the platform provisions <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/realtime-endpoints.html\" rel=\"noopener\" target=\"_blank\">SageMaker endpoints</a> dynamically, providing efficient resource utilization while maintaining scalability. The integration of modern natural language processing (NLP) and LLM technologies enhances metadata accuracy, enabling more precise search functionality and streamlined document management. This approach supports the broader goal of digital transformation, making sure that archival data can be effectively used for research, policy development, and institutional knowledge retention.</p> \n<p>In this post, we discuss how you can build an AI-powered document processing platform with open source NER and LLMs on SageMaker.</p> \n<h2><strong>Solution overview</strong></h2> \n<p>The <a href=\"https://github.com/aws-samples/sample-llm-with-ner?tab=readme-ov-file\" rel=\"noopener\" target=\"_blank\">NER &amp; LLM Gen AI Application</a> is a document processing solution built on AWS that combines NER and LLMs to automate document analysis at scale. The system addresses the challenges of processing large volumes of textual data by using two key models: Mixtral-8x7B for text generation and summarization, and a BERT NER model for entity recognition.</p> \n<p>The following diagram illustrates the solution architecture.</p> \n<p><img alt=\"\" class=\"alignnone wp-image-104004 size-large\" height=\"896\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/04/08/ML-18239-architecture-1-1024x896.png\" width=\"1024\" /></p> \n<p>The architecture implements a serverless design with dynamically managed SageMaker endpoints that are created on demand and destroyed after use, optimizing performance and cost-efficiency. The application follows a modular structure with distinct components handling different aspects of document processing, including extractive summarization, abstractive summarization, title generation, and author extraction. These modular pieces can be removed, replaced, duplicated, and patterned against for optimal reusability.</p> \n<p>The processing workflow begins when documents are detected in the Extracts Bucket, triggering a comparison against existing processed files to prevent redundant operations. The system then orchestrates the creation of necessary model endpoints, processes documents in batches for efficiency, and automatically cleans up resources upon completion. Multiple specialized <a href=\"http://aws.amazon.com/s3\" rel=\"noopener\" target=\"_blank\">Amazon Simple Storage Service Buckets</a> (Amazon S3 Bucket) store different types of outputs.</p> \n<p><a class=\"lb-btn-p-primary\" href=\"https://console.aws.amazon.com/\" rel=\"noopener\" target=\"_blank\"> Click here to open the AWS console and follow along.&nbsp;</a></p> \n<h2>Solution Components</h2> \n<h3>Storage architecture</h3> \n<p>The application uses a multi-bucket <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/Welcome.html\" rel=\"noopener\" target=\"_blank\">Amazon S3</a> storage architecture designed for clarity, efficient processing tracking, and clear separation of document processing stages. Each bucket serves a specific purpose in the pipeline, providing organized data management and simplified access control. <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Introduction.html\" rel=\"noopener\" target=\"_blank\">Amazon DynamoDB</a>&nbsp;is used to track the processing of each document.</p> \n<p>The bucket types are as follows:</p> \n<ul> \n <li><strong>Extracts</strong> – Source documents for processing</li> \n <li><strong>Extractive summary</strong> – Key sentence extractions</li> \n <li><strong>Abstractive summary</strong> – LLM-generated summaries</li> \n <li><strong>Generated titles</strong> – LLM-generated titles</li> \n <li><strong>Author information</strong> – Name extraction using NER</li> \n <li><strong>Model weights</strong> – ML model storage</li> \n</ul> \n<h3>SageMaker endpoints</h3> \n<p>The SageMaker endpoints in this application represent a dynamic, cost-optimized approach to machine learning (ML) model deployment. Rather than maintaining constantly running endpoints, the system creates them on demand when document processing begins and automatically stops them upon completion. Two primary endpoints are managed: one for the Mixtral-8x7B LLM, which handles text generation tasks including abstractive summarization and title generation, and another for the BERT-based NER model responsible for author extraction. This endpoint based architecture provides decoupling between the other processing, allowing independent scaling, versioning, and maintenance of each component. The decoupled nature of the endpoints also provides flexibility to update or replace individual models without impacting the broader system architecture.</p> \n<p>The endpoint lifecycle is orchestrated through dedicated <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/welcome.html\" rel=\"noopener\" target=\"_blank\">AWS Lambda</a> functions that handle creation and deletion. When processing is triggered, endpoints are automatically initialized and model artifacts are downloaded from Amazon S3. The LLM endpoint is provisioned on ml.p4d.24xlarge (GPU) instances to provide sufficient computational power for the LLM operations. The NER endpoint is deployed on a ml.c5.9xlarge instance (CPU), which is sufficient to support this language model. To maximize cost-efficiency, the system processes documents in batches while the endpoints are active, allowing multiple documents to be processed during a single endpoint deployment cycle and maximizing the usage of the endpoints.</p> \n<p>For usage awareness, the endpoint management system includes notification mechanisms through <a href=\"https://docs.aws.amazon.com/sns/latest/dg/welcome.html\" rel=\"noopener\" target=\"_blank\">Amazon Simple Notification Service</a> (Amazon SNS). Users receive notifications when endpoints are destroyed, providing visibility that a large instance is destroyed and not idling. The entire endpoint lifecycle is integrated into the broader workflow through <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/welcome.html\" rel=\"noopener\" target=\"_blank\">AWS Step Functions</a>, providing coordinated processing across all components of the application.</p> \n<h3>Step Functions workflow</h3> \n<p>The following figure illustrates the Step Functions workflow.</p> \n<p><img alt=\"\" class=\"aligncenter wp-image-103979 size-large\" height=\"1024\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/04/07/ML-18239-step_function-933x1024.png\" style=\"margin: 10px 0px 10px 0px;\" width=\"933\" /></p> \n<p>The application implements a processing pipeline through AWS Step Functions, orchestrating a series of Lambda functions that handle distinct aspects of document analysis. Multiple documents are processed in batches while endpoints are active, maximizing resource utilization. When processing is complete, the workflow automatically triggers endpoint deletion, preventing unnecessary resource consumption.</p> \n<p>The highly modular Lambda functions are designed for flexibility and extensibility, enabling their adaptation for diverse use cases beyond their default implementations. For example, the abstractive summarization can be reused to do QnA or other forms of generation, and the NER model can be used to recognize other entity types such as organizations or locations.</p> \n<h3>Logical flow</h3> \n<p>The document processing workflow orchestrates multiple stages of analysis that operate both in parallel and sequential patterns. The Step Functions coordinates the movement of documents through extractive summarization, abstractive summarization, title generation, and author extraction processes. Each stage is managed as a discrete step, with clear input and output specifications, as illustrated in the following figure.</p> \n<p>In the following sections, we look at each step of the logical flow in more detail.</p> \n<p><strong> <img alt=\"\" class=\"wp-image-104290 size-full aligncenter\" height=\"639\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/04/10/ML-182390NEW-FOCHART-resized.png\" width=\"400\" /></strong></p> \n<h4>Extractive summarization:</h4> \n<p>The extractive summarization process employs the TextRank algorithm, powered by sumy and NLTK libraries, to identify and extract the most significant sentences from source documents. This approach treats sentences as nodes within a graph structure, where the importance of each sentence is determined by its relationships and connections to other sentences. The algorithm analyzes these interconnections to identify key sentences that best represent the document’s core content, functioning similarly to how an editor would select the most important passages from a text. This method preserves the original wording while reducing the document to its most essential components.</p> \n<h4>Generate title:</h4> \n<p>The title generation process uses the Mixtral-8x7B model but focuses on creating concise, descriptive titles that capture the document’s main theme. It uses the extractive summary as input to provide efficiency and focus on key content. The LLM is prompted to analyze the main topics and themes present in the summary and generate an appropriate title that effectively represents the document’s content. This approach makes sure that generated titles are both relevant and informative, providing users with a quick understanding of the document’s subject matter without needing to read the full text.</p> \n<h4>Abstractive summarization:</h4> \n<p>Abstractive summarization also uses the Mixtral-8x7B LLM to generate entirely new text that captures the essence of the document. Unlike extractive summarization, this method doesn’t simply select existing sentences, but creates new content that paraphrases and restructures the information. The process takes the extractive summary as input, which helps reduce computation time and costs by focusing on the most relevant content. This approach results in summaries that read more naturally and can effectively condense complex information into concise, readable text.</p> \n<h4>Extract author:</h4> \n<p>Author extraction employs a BERT NER model to identify and classify author names within documents. The process specifically focuses on the first 1,500 characters of each document, where author information typically appears. The system follows a three-stage process: first, it detects potential name tokens with confidence scoring; second, it assembles related tokens into complete names; and finally, it validates the assembled names to provide proper formatting and eliminate false positives. The model can recognize various entity types (PER, ORG, LOC, MISC) but is specifically tuned to identify person names in the context of document authorship.</p> \n<h2><strong>Cost and Performance</strong></h2> \n<p>The solution achieves remarkable throughput by processing 100,000 documents within a 12-hour window. Key architectural decisions drive both performance and cost optimization. By implementing extractive summarization as an initial step, the system reduces input tokens by 75-90% (depending on the size of the document), substantially decreasing the workload for downstream LLM processing. The implementation of a dedicated NER model for author extraction yields an additional 33% reduction in LLM calls by bypassing the need for the more resource-intensive language model. These strategic optimizations create a compound effect – accelerating processing speeds while simultaneously reducing operational costs – establishing the platform as an efficient and cost-effective solution for enterprise-scale document processing needs. To estimate cost for processing 100,000 documents, multiply 12 by the cost per hour of the ml.p4d.24xlarge instance in your AWS region. It’s important to note that instance costs vary by region and may change over time, so current pricing should be consulted for accurate cost projections.</p> \n<h2>Deploy the Solution</h2> \n<p><a href=\"https://github.com/aws-samples/sample-llm-with-ner?tab=readme-ov-file#setup-and-deployment\" rel=\"noopener\" target=\"_blank\">To deploy follow along the instruction in the GitHub repo.</a></p> \n<h2>Clean up</h2> \n<p><a href=\"https://github.com/aws-samples/sample-llm-with-ner?tab=readme-ov-file#destroydelete-application-from-aws-account\" rel=\"noopener\" target=\"_blank\">Clean up instructions can be found in this section.</a></p> \n<h2>Conclusion</h2> \n<p>The NER &amp; LLM Gen AI Application represents an organizational advancement in automated document processing, using powerful language models in an efficient serverless architecture. Through its implementation of both extractive and abstractive summarization, named entity recognition, and title generation, the system demonstrates the practical application of modern AI technologies in handling complex document analysis tasks. The application’s modular design and flexible architecture enable organizations to adapt and extend its capabilities to meet their specific needs, while the careful management of AWS resources through dynamic endpoint creation and deletion maintains cost-effectiveness. As organizations continue to face growing demands for efficient document processing, this solution provides a scalable, maintainable and customizable framework for automating and streamlining these workflows.</p> \n<h2>References:</h2> \n<ul> \n <li><a href=\"https://aws.amazon.com/what-is/intelligent-document-processing/\" rel=\"noopener\" target=\"_blank\">What is Intelligent Document Processing (IDP)?</a></li> \n <li><a href=\"https://aws.amazon.com/serverless/\" rel=\"noopener\" target=\"_blank\">Serverless on AWS</a></li> \n <li><a href=\"https://aws.amazon.com/govcloud-us/\" rel=\"noopener\" target=\"_blank\">AWS GovCloud (US)</a></li> \n <li><a href=\"https://aws.amazon.com/ai/generative-ai/\" rel=\"noopener\" target=\"_blank\">Generative AI on AWS</a></li> \n</ul> \n<p style=\"clear: both;\"></p> \n<hr /> \n<h3>About the Authors</h3> \n<p style=\"clear: both;\"><img alt=\"\" class=\"size-full wp-image-50493 alignleft\" height=\"129\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2023/02/14/nick-biso.jpg\" width=\"100\" /><strong>Nick Biso</strong>&nbsp;is a Machine Learning Engineer at AWS Professional Services. He solves complex organizational and technical challenges using data science and engineering. In addition, he builds and deploys AI/ML models on the AWS Cloud. His passion extends to his proclivity for travel and diverse cultural experiences.</p> \n<p style=\"clear: both;\"><img alt=\"\" class=\"wp-image-104238 size-full alignleft\" height=\"140\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/04/09/ML-18239-author-ian-lunsford-214x300-1.jpg\" width=\"100\" /><strong>Dr. Ian Lunsford</strong> is an Aerospace Cloud Consultant at AWS Professional Services. He integrates cloud services into aerospace applications. Additionally, Ian focuses on building AI/ML solutions using AWS services.</p> \n<p style=\"clear: both;\"><img alt=\"\" class=\"wp-image-104239 size-full alignleft\" height=\"133\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/04/09/ML-18239-author-max-rathmann-1.png\" width=\"100\" /><strong>Max Rathmann</strong> is a Senior DevOps Consultant at Amazon Web Services, where she specializes in architecting cloud-native, server-less applications. She has a background in operationalizing AI/ML solutions and designing MLOps solutions with AWS Services.</p> \n<p style=\"clear: both;\"><img alt=\"\" class=\"wp-image-104240 size-full alignleft\" height=\"100\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/04/09/ML-18239-author-michael-massey-300x300-1.jpg\" width=\"100\" /><strong>Michael Massey</strong> is a Cloud Application Architect at Amazon Web Services, where he specializes in building frontend and backend cloud-native applications. He designs and implements scalable and highly-available solutions and architectures that help customers achieve their business goals.</p> \n<p style=\"clear: both;\"><img alt=\"\" class=\"wp-image-104241 size-full alignleft\" height=\"133\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/04/09/ML-18239-author-jeff-ryan-1.jpeg\" width=\"100\" /><strong>Jeff Ryan</strong> is a DevOps Consultant at AWS Professional Services, specializing in AI/ML, automation, and cloud security implementations. He focuses on helping organizations leverage AWS services like Bedrock, Amazon Q, and SageMaker to build innovative solutions. His expertise spans MLOps, GenAI, serverless architectures, and Infrastructure as Code (IaC).</p> \n<p style=\"clear: both;\"><img alt=\"\" class=\"wp-image-104242 size-full alignleft\" height=\"114\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/04/09/ML-18239-author-brian-weston-263x300-1.png\" width=\"100\" /><strong>Dr. Brian Weston</strong> is a research manager at the Center for Applied Scientific Computing, where he is the AI/ML Lead for the Digital Twins for Additive Manufacturing Strategic Initiative, a project focused on building digital twins for certification and qualification of 3D printed components. He also holds a program liaison role between scientists and IT staff, where Weston champions the integration of cloud computing with digital engineering transformation, driving efficiency and innovation for mission science projects at the laboratory.</p> \n<p style=\"clear: both;\"><img alt=\"\" class=\"wp-image-104243 size-full alignleft\" height=\"122\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/04/09/ML-18239-author-ian-thompson-1.jpg\" width=\"100\" /><strong>Ian Thompson</strong> is a Data Engineer at&nbsp;Enterprise Knowledge, specializing in graph application development and data catalog solutions. His experience includes designing and implementing graph architectures that improve data discovery and analytics across organizations. He is also the #1&nbsp;Square Off&nbsp;player in the world.</p> \n<p style=\"clear: both;\"><img alt=\"\" class=\"wp-image-104244 size-full alignleft\" height=\"131\" src=\"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/04/09/ML-18239-author-anna-dangela-228x300-1.jpg\" width=\"100\" /><strong>Anna D’Angela</strong>&nbsp;is a Data Engineer at Enterprise Knowledge within the Semantic Engineering and Enterprise AI practice. She specializes in the design and implementation of knowledge graphs.</p>",
    "source_feed": "https://aws.amazon.com/blogs/machine-learning/feed/",
    "scraped_at_iso": "2025-05-02T21:32:12Z",
    "filter_verdict": {
        "importance_level": "Interesting",
        "topic": "AI Models",
        "reasoning_summary": "The article describes a concrete implementation of an AI-driven document processing platform using NER and LLMs on Amazon SageMaker, which is a verifiable and significant application of AI technology in a real-world setting.",
        "primary_topic_keyword": "AI document processing"
    },
    "filter_error": null,
    "filtered_at_iso": "2025-05-02T21:33:51Z",
    "topic": "AI Models",
    "is_breaking": false,
    "primary_keyword": "AI document processing",
    "selected_image_url": "https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/04/23/document-processing-sagemaker-1120x630.jpg",
    "seo_agent_results": {
        "generated_title_tag": "AI Document Processing with Open Source NER & LLM on SageMaker",
        "generated_meta_description": "Learn how to build an AI document processing platform using open-source NER models and LLMs on Amazon SageMaker for efficient archival data management.",
        "generated_json_ld": "<script type=\"application/ld+json\">  \n{  \n  \"@context\": \"https://schema.org\",  \n  \"@type\": \"NewsArticle\",  \n  \"headline\": \"AI Document Processing with Open Source NER & LLM on SageMaker\",  \n  \"description\": \"Learn how to build an AI document processing platform using open-source NER models and LLMs on Amazon SageMaker for efficient archival data management.\",  \n  \"keywords\": [\"AI document processing\"],  \n  \"mainEntityOfPage\": { \"@type\": \"WebPage\", \"@id\": \"https://aws.amazon.com/blogs/machine-learning/build-an-ai-powered-document-processing-platform-with-open-source-ner-model-and-llm-on-amazon-sagemaker/\" },  \n  \"image\": { \"@type\": \"ImageObject\", \"url\": \"https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2025/04/23/document-processing-sagemaker-1120x630.jpg\" },  \n  \"datePublished\": \"2025-04-23T16:06:35Z\",  \n  \"author\": { \"@type\": \"Person\", \"name\": \"AI News Team\" },  \n  \"publisher\": {  \n    \"@type\": \"Organization\",  \n    \"name\": \"Dacoola\",  \n    \"logo\": { \"@type\": \"ImageObject\", \"url\": \"https://i.imgur.com/A5Wdp6f.png\" }  \n  }  \n}  \n</script>",
        "generated_article_body_md": "## Build an AI-powered document processing platform with open source NER model and LLM on Amazon SageMaker  \n\nArchival data in research institutions and national laboratories often remains underutilized due to limited metadata and inconsistent labeling, making traditional keyword-based searches inefficient. To address this, a U.S. National Laboratory has developed an **AI document processing** platform on Amazon SageMaker, integrating named entity recognition (NER) and large language models (LLMs) like Mixtral-8x7B. This solution automates metadata enrichment, document classification, and summarization, significantly improving the accessibility of historical records.  \n\nThe platform employs a serverless, cost-optimized architecture that dynamically provisions SageMaker endpoints for efficient resource use. A BERT-based NER model extracts structured metadata, while Mixtral-8x7B handles abstractive summarization and title generation. By processing documents in batches and automatically cleaning up resources, the system enhances metadata accuracy and search functionality, supporting digital transformation efforts in research and policy development.  \n\nThe solution’s modular design includes specialized Amazon S3 buckets for different processing stages—such as extracts, summaries, and author information—ensuring organized data management. AWS Step Functions orchestrate the workflow, coordinating Lambda functions for tasks like extractive summarization (using TextRank) and author extraction (via BERT NER). This approach reduces LLM workload by 33% and token input by 75-90%, optimizing both performance and cost."
    },
    "seo_agent_error": null,
    "generated_tags": [
        "AI document processing",
        "Amazon SageMaker",
        "Named Entity Recognition",
        "Large Language Models",
        "Mixtral-8x7B",
        "BERT NER model",
        "AWS Step Functions",
        "metadata enrichment",
        "serverless architecture",
        "digital transformation"
    ],
    "tags_agent_error": null,
    "trend_score": 10.0,
    "slug": "build-an-ai-powered-document-processing-platform-with-open-source-ner-model-and-",
    "audio_url": null
}